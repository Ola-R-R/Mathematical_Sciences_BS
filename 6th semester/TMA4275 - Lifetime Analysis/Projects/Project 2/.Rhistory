G2_Kaplan <- append(0,G2)
plot(G1_Kaplan,append(append(1,hatS1),tail(hatS1,1)), lwd = 1.5, type = "s", col = "blue", main = "", xlab = latex2exp("$t$"), ylab = "Value", xlim = c(0,225), ylim = c(0, 1.4))
lines(G2_Kaplan,append(1,hatS2), lwd = 1.5, type = "s", col = "red")
lines(G1_Kaplan,append(append(1,Kaplan_upper_CI_1),tail(Kaplan_upper_CI_1,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G1_Kaplan,append(append(1,Kaplan_lower_CI_1),tail(Kaplan_lower_CI_1,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G2_Kaplan,append(1,Kaplan_upper_CI_2), lwd = 1.5, lty=2, type = "s", col = "red")
lines(G2_Kaplan,append(1,Kaplan_lower_CI_2), lwd = 1.5, lty=2, type = "s", col = "red")
legend(0, 1.4, c("Kaplan-Meier estimator for Group 1", "Kaplan-Meier estimator for Group 2"), col = c("blue", "red"), lty = c(1, 1), lwd = c(2, 2))
S1 <- Surv(G1, d1)
S2 <- Surv(G2, d2)
survfit1 <- survfit(S1 ~ 1, conf.type = "log-log", conf.int=.90)
survfit2 <- survfit(S2 ~ 1, conf.type = "log-log", conf.int=.90)
plot(survfit1, col = "blue", lwd = 1.5, main = "", xlab = latex2exp("$t$"), ylab = "Value", xlim = c(0,225), ylim = c(0,1.4))
lines(survfit2, col = "red", lwd = 1.5)
legend(0, 1.4, c("Kaplan-Meier estimator for Group 1", "Kaplan-Meier estimator for Group 2"), col = c("blue", "red"), lty = c(1, 1), lwd = c(1.5, 1.5))
# Finding Xi_0.2from Eq. (1.9) and C.I.
fr <- 1 - .2
xi1 <- G1[hatS1 <= fr][1]
xi_upper_CI_1 <- G1[Kaplan_upper_CI_1 <= fr][1]
xi_lower_CI_1 <- G1[Kaplan_lower_CI_1 <= fr][1]
xi2 <- G2[hatS2 <= fr][1]
xi_upper_CI_2 <- G2[Kaplan_upper_CI_2 <= fr][1]
xi_lower_CI_2 <- G2[Kaplan_lower_CI_2 <= fr][1]
cat("We find that the 20% fractile for Group 1 is", xi1, "with confidence interval", paste("(",xi_lower_CI_1,",",xi_upper_CI_1,")", sep = ""),"\nand",
"\nwe find that the 20% fractile for Group 2 is", xi2, "with confidence interval", paste("(",xi_lower_CI_2,",",xi_upper_CI_2,")", sep = ""))
# Making the graph look good
plot(survfit1, col = "blue", lwd = 1, main = "", xlab = latex2exp("$t$"), ylab = "Value", xlim = c(0,225), ylim = c(0,1.5))
lines(survfit2, col = "red", lwd = 1)
abline(h = fr, lwd = 1.5, lty=2 ,col = "black")
lines(c(xi1,xi1),c(0,fr),type = "l", lwd = 2.5, col = "blue")
lines(c(xi_upper_CI_1,xi_upper_CI_1),c(0,fr),type = "l", lwd = 2.5, lty=2, col = "blue")
lines(c(xi_lower_CI_1,xi_lower_CI_1),c(0,fr),type = "l", lwd = 2.5, lty=2, col = "blue")
lines(c(xi2,xi2),c(0,fr),type = "l", lwd = 2.5, lty=1, col = "red")
lines(c(xi_upper_CI_2,xi_upper_CI_2),c(0,fr),type = "l", lwd = 2.5, lty=2, col = "red")
lines(c(xi_lower_CI_2,xi_lower_CI_2),c(0,fr),type = "l", lwd = 2.5, lty=2, col = "red")
axis(1, at = c(xi1, xi2), labels = c(xi1, xi2))
legend(0, 1.5, c("Kaplan-Meier estimator for Group 1", "Kaplan-Meier estimator for Group 2", "20 percent fractile"), col = c("blue", "red", "black"), lty = c(1, 1, 2), lwd = c(1.5, 1.5, 1.5))
fun1e <- function(Y1,Y2,G1,G2,d1,d2) {
G1test <- G1[G1 <= 200]
G2test <- G2[G2 <= 200]
Y1test <- stepfun(append(G1test,200),(append(head(Y1,1),append(Y1[G1 <= 200]-1,tail(Y1[G1 <= 200],1)-1))),right = T)
Y2test <- stepfun(append(G2test,200),(append(head(Y2,1),append(Y2[G2 <= 200]-1,tail(Y2[G2 <= 200],1)-1))),right = T)
G1testtest <- (G1test * d1[G1 <= 200])[(G1test * d1[G1 <= 200]) != 0]
G2testtest <- (G2test * d2[G2 <= 200])[(G2test * d2[G2 <= 200]) != 0]
Gtesttest <- sort(append(G1testtest[G1testtest<200],G2testtest))
Z11 <- sum(Y2test(G1testtest)/(Y1test(G1testtest) + Y2test(G1testtest)))
Z12 <- sum(Y1test(G2testtest)/(Y1test(G2testtest) + Y2test(G2testtest)))
Z1 <- Z11 - Z12
V11 <- sum((Y1test(Gtesttest) * Y2test(Gtesttest))/((Y1test(Gtesttest) + Y2test(Gtesttest))^2))
U0 <- Z1/sqrt(V11)
p_value <- 2 * min(pnorm(U0, lower.tail = F),pnorm(U0))
return(list(U0,p_value))
}
U0 <- fun1e(Y1,Y2,G1,G2,d1,d2)[[1]]
p_value <- fun1e(Y1,Y2,G1,G2,d1,d2)[[2]]
cat("We get that the value of U_0 is", paste(round(U0,3),",",sep=""), "\nand since this is outside of", paste("(",round(qnorm(0.95,lower.tail = F),3),",",round(qnorm(0.95),3),")",",",sep=""), "we get that H0 should be discarded. \nThe associated p-value is", paste(round(p_value,3),",",sep=""), "which is sufficiently small.")
sim2a <- function(n, alpha = .01, beta = 1.1, lambda = .005, t = 225) {
logu <- log(1 - runif(n))
# Calc. survival times from Eq. (2.7)
TT <- (-(1/alpha) * logu)^(1/beta)
# Calc. censoring times from Eq. (2.8)
C <- -(1/lambda) * logu
tildeTT <- c()
D <- c()
for (i in 1:n) {
# Finding the right censored survival times from Eq. (2.3)
tildeTT[i] <- min(TT[i], C[i], t)
# Finding the censoring indicators from Eq. (2.4)
ifelse(TT[i] <= min(C[i], t), D[i] <- 1, D[i] <- 0)
}
# Sorting them in correct order
tildeT <- sort(tildeTT)
D <- D[order(tildeTT)]
return(list(tildeT, D))
}
n <- 15
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
# Set 1
set.seed(1)
sim2a_11 <- sim2a(n)
G11 <- sim2a_11[[1]]
d11 <- sim2a_11[[2]]
set.seed(2)
sim2a_21 <- sim2a(n)
G21 <- sim2a_21[[1]]
d21 <- sim2a_21[[2]]
fun21 <- fun1b(Y1123,Y2123,d11,d21)
hatA11 <- fun21[[1]]
hatA21 <- fun21[[2]]
hatSigma112 <- fun21[[3]]
hatSigma212 <- fun21[[4]]
Nelson_upper_CI_11 <- hatA11 * exp(z * sqrt(hatSigma112)/hatA11)
Nelson_lower_CI_11 <- hatA11 * exp(-z * sqrt(hatSigma112)/hatA11)
Nelson_upper_CI_21 <- hatA21 * exp(z * sqrt(hatSigma212)/hatA21)
Nelson_lower_CI_21 <- hatA21 * exp(-z * sqrt(hatSigma212)/hatA21)
# Set 2
set.seed(3)
sim2a_12 <- sim2a(n)
G12 <- sim2a_12[[1]]
d12 <- sim2a_12[[2]]
set.seed(4)
sim2a_22 <- sim2a(n)
G22 <- sim2a_22[[1]]
d22 <- sim2a_22[[2]]
fun22 <- fun1b(Y1123,Y2123,d12,d22)
hatA12 <- fun22[[1]]
hatA22 <- fun22[[2]]
hatSigma122 <- fun22[[3]]
hatSigma222 <- fun22[[4]]
Nelson_upper_CI_12 <- hatA12 * exp(z * sqrt(hatSigma122)/hatA12)
Nelson_lower_CI_12 <- hatA12 * exp(-z * sqrt(hatSigma122)/hatA12)
Nelson_upper_CI_22 <- hatA22 * exp(z * sqrt(hatSigma222)/hatA22)
Nelson_lower_CI_22 <- hatA22 * exp(-z * sqrt(hatSigma222)/hatA22)
# Set 3
set.seed(5)
sim2a_13 <- sim2a(n)
G13 <- sim2a_13[[1]]
d13 <- sim2a_13[[2]]
set.seed(6)
sim2a_23 <- sim2a(n)
G23 <- sim2a_23[[1]]
d23 <- sim2a_23[[2]]
fun23 <- fun1b(Y1123,Y2123,d13,d23)
hatA13 <- fun23[[1]]
hatA23 <- fun23[[2]]
hatSigma132 <- fun23[[3]]
hatSigma232 <- fun23[[4]]
Nelson_upper_CI_13 <- hatA13 * exp(z * sqrt(hatSigma132)/hatA13)
Nelson_lower_CI_13 <- hatA13 * exp(-z * sqrt(hatSigma132)/hatA13)
Nelson_upper_CI_23 <- hatA23 * exp(z * sqrt(hatSigma232)/hatA23)
Nelson_lower_CI_23 <- hatA23 * exp(-z * sqrt(hatSigma232)/hatA23)
par(mfrow = c(3,1))
G11_Nelson <- append(append(0,G11),225)
G21_Nelson <- append(append(0,G21),225)
plot(G11_Nelson,append(append(0,hatA11),tail(hatA11,1)), lwd = 1.5, type = "s", col = "blue", main = "Set 1", xlab = latex2exp("$t$"), ylab = "Value", xlim = c(0,225), ylim = c(0,max(Nelson_upper_CI_11,Nelson_upper_CI_21)))
lines(G21_Nelson,append(append(0,hatA21),tail(hatA21,1)), lwd = 1.5, type = "s", col = "red")
lines(G11_Nelson,append(append(0,Nelson_upper_CI_11),tail(Nelson_upper_CI_11,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G11_Nelson,append(append(0,Nelson_lower_CI_11),tail(Nelson_lower_CI_11,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G21_Nelson,append(append(0,Nelson_upper_CI_21),tail(Nelson_upper_CI_21,1)), lwd = 1.5, lty=2, type = "s", col = "red")
lines(G21_Nelson,append(append(0,Nelson_lower_CI_21),tail(Nelson_lower_CI_21,1)), lwd = 1.5, lty=2, type = "s", col = "red")
G12_Nelson <- append(append(0,G12),225)
G22_Nelson <- append(append(0,G22),225)
plot(G12_Nelson,append(append(0,hatA12),tail(hatA12,1)), lwd = 1.5, type = "s", col = "blue", main = "Set 2", xlab = latex2exp("$t$"), ylab = "Value", xlim = c(0,225), ylim = c(0,max(Nelson_upper_CI_12,Nelson_upper_CI_22)))
lines(G22_Nelson,append(append(0,hatA22),tail(hatA22,1)), lwd = 1.5, type = "s", col = "red")
lines(G12_Nelson,append(append(0,Nelson_upper_CI_12),tail(Nelson_upper_CI_12,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G12_Nelson,append(append(0,Nelson_lower_CI_12),tail(Nelson_lower_CI_12,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G22_Nelson,append(append(0,Nelson_upper_CI_22),tail(Nelson_upper_CI_22,1)), lwd = 1.5, lty=2, type = "s", col = "red")
lines(G22_Nelson,append(append(0,Nelson_lower_CI_22),tail(Nelson_lower_CI_22,1)), lwd = 1.5, lty=2, type = "s", col = "red")
G13_Nelson <- append(append(0,G13),225)
G23_Nelson <- append(append(0,G23),225)
plot(G13_Nelson,append(append(0,hatA13),tail(hatA13,1)), lwd = 1.5, type = "s", col = "blue", main = "Set 3", xlab = latex2exp("$t$"), ylab = "Value", xlim = c(0,225), ylim = c(0,max(Nelson_upper_CI_13,Nelson_upper_CI_23)))
lines(G23_Nelson,append(append(0,hatA23),tail(hatA23,1)), lwd = 1.5, type = "s", col = "red")
lines(G13_Nelson,append(append(0,Nelson_upper_CI_13),tail(Nelson_upper_CI_13,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G13_Nelson,append(append(0,Nelson_lower_CI_13),tail(Nelson_lower_CI_13,1)), lwd = 1.5, lty=2, type = "s", col = "blue")
lines(G23_Nelson,append(append(0,Nelson_upper_CI_23),tail(Nelson_upper_CI_23,1)), lwd = 1.5, lty=2, type = "s", col = "red")
lines(G23_Nelson,append(append(0,Nelson_lower_CI_23),tail(Nelson_lower_CI_23,1)), lwd = 1.5, lty=2, type = "s", col = "red")
fun2b1 <- fun1e(Y1123,Y2123,G11,G21,d11,d21)
fun2b2 <- fun1e(Y1123,Y2123,G12,G22,d12,d22)
fun2b3 <- fun1e(Y1123,Y2123,G13,G23,d13,d23)
data.frame("U0" = c(fun2b1[[1]],fun2b2[[1]],fun2b3[[1]]), "p-value" = c(fun2b1[[2]],fun2b2[[2]],fun2b3[[2]]), row.names = c("Set 1","Set 2","Set 3"))
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
# set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
# set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
# set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
# set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
# set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
# set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
# set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
# set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
# set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
# set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
# set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
# set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
# set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
# set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
# set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
# set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
# set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c)
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of our p-values", xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 5
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c, main = paste("Normal Q-Q Plot, w. n = ", n))
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = paste("Histogram of our p-values, w. n = ", n), xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
n <- 6
M <- 1000
U0c <- c()
p_val <- c()
for (i in 1:M) {
Y1123 <- seq(n,1)
Y2123 <- seq(n,1)
set.seed(i + 1000)
sim2a_1123 <- sim2a(n)
G1123 <- sim2a_1123[[1]]
d1123 <- sim2a_1123[[2]]
set.seed(i + 1000 + M)
sim2a_2123 <- sim2a(n)
G2123 <- sim2a_2123[[1]]
d2123 <- sim2a_2123[[2]]
fun2c <- fun1e(Y1123,Y2123,G1123,G2123,d1123,d2123)
U0c <- append(U0c, fun2c[[1]])
p_val <- append(p_val, fun2c[[2]])
}
qqnorm(U0c, main = paste("Normal Q-Q Plot, w. n = ", n))
abline(v = 0, lwd = 1.5, col = "blue")
abline(h = 0, lwd = 1.5, col = "blue")
abline(a = 0, b = 1, lwd = 3, col = "red")
set.seed(98)
snd <- rnorm(M)
p_val_snd <- 0
for (i in 1:length(pnorm(rnorm(M)))){
p_val_snd[i] <- 2 * min(pnorm(snd,lower.tail = F)[i],pnorm(snd,lower.tail = T)[i])
}
par(mfrow = c(2,1))
hist(p_val, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = paste("Histogram of our p-values, w. n = ", n), xlab = "p-values")
hist(p_val_snd, freq = F, col = "darkgray", lwd = 4, breaks = 100, xlim = c(0,1), main = "Histogram of the p-values from known standard normal distr.n", xlab = "p-values")
