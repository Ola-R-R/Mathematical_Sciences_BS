}
set.seed(98)
N <- 50
alpha <- c(0, 1, 0)
beta <- matrix(c(.48, .04, .48, .01, .98, .01, .49, .02, .49), nrow = 3, byrow = T)
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
predZ <- sim[,3]
optZ <- sim[,4]
par(mfrow=c(3,1))
plot(0:N, Z, type = "s", lwd = 2, cex.axis = 1.5, main = "Realizations", xlab = "", ylab = "Z", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
legend(0, 2, c("Z"), col = c("black"), lty = c(1, 1), lwd = c(4, 4))
plot(0:N, predZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "", ylab = "Predictable Variation Process", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
abline(h = mean(predZ), col = "blue")
legend(0, 25, c("Predictable Variation Process", paste("Mean of Predictable Variation Process =", mean(predZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(4, 4))
plot(0:N, optZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "Time n", ylab = "Optional Variation Process", cex.lab = 1.5, cex.main = 1.5)
abline(h = mean(optZ), col = "blue")
legend(0, 25, c("Optional Variation Process", paste("Mean of Optional Variation Process =", mean(optZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(4, 4))
set.seed(98)
N <- 100
M <- 50
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = 1, lwd = 1.5, type = "s")
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = 1, lwd = 1.5, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 3)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = 1, lwd = 1.5, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 3)
set.seed(98)
N <- 50
alpha <- c(0, 1, 0)
beta <- matrix(c(.48, .04, .48, .01, .98, .01, .49, .02, .49), nrow = 3, byrow = T)
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
predZ <- sim[,3]
optZ <- sim[,4]
par(mfrow=c(3,1))
plot(0:N, Z, type = "s", lwd = 2, cex.axis = 1.5, main = "Realizations", xlab = "", ylab = "Z", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
legend(0, 2, c("Z"), col = c("black"), lty = c(1, 1), lwd = c(4, 4))
plot(0:N, predZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "", ylab = "Predictable Variation Process", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
abline(h = mean(predZ), col = "blue", lwd = 2)
legend(0, 25, c("Predictable Variation Process", paste("Mean of Predictable Variation Process =", mean(predZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(4, 4))
plot(0:N, optZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "Time n", ylab = "Optional Variation Process", cex.lab = 1.5, cex.main = 1.5)
abline(h = mean(optZ), col = "blue", lwd = 2)
legend(0, 25, c("Optional Variation Process", paste("Mean of Optional Variation Process =", mean(optZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(4, 4))
set.seed(98)
N <- 50
alpha <- c(0, 1, 0)
beta <- matrix(c(.48, .04, .48, .01, .98, .01, .49, .02, .49), nrow = 3, byrow = T)
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
predZ <- sim[,3]
optZ <- sim[,4]
par(mfrow=c(3,1))
plot(0:N, Z, type = "s", lwd = 2, cex.axis = 1.5, main = "Realizations", xlab = "", ylab = "Z", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
legend(0, 2, c("Z"), col = c("black"), lty = c(1), lwd = c(2))
plot(0:N, predZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "", ylab = "Predictable Variation Process", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
abline(h = mean(predZ), col = "blue", lwd = 2)
legend(0, 25, c("Predictable Variation Process", paste("Mean of Predictable Variation Process =", mean(predZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(2, 2))
plot(0:N, optZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "Time n", ylab = "Optional Variation Process", cex.lab = 1.5, cex.main = 1.5)
abline(h = mean(optZ), col = "blue", lwd = 2)
legend(0, 25, c("Optional Variation Process", paste("Mean of Optional Variation Process =", mean(optZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(2, 2))
set.seed(98)
N <- 100
M <- 50
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = 1, lwd = 12, type = "s")
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 2)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 2)
set.seed(98)
N <- 100
M <- 50
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = 1, lwd = 2, type = "s")
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 2)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 2)
set.seed(98)
N <- 100
M <- 50
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
cols <- brewer.pal(8,"Set3")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 2)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 2)
set.seed(98)
N <- 100
M <- 50
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
cols <- brewer.pal(M,"Set3")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 2)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 2)
set.seed(98)
N <- 100
M <- 50
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
cols <- brewer.pal(M,"PuOr")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 2)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 2)
set.seed(98)
N <- 100
M <- 50
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
cols <- brewer.pal(M,"Paired")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 2)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = 1, lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 2)
set.seed(98)
N <- 100
M <- 12
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
cols <- brewer.pal(M,"Paired")
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 2)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 2)
set.seed(98)
N <- 50
alpha <- c(0, 1, 0)
beta <- matrix(c(.48, .04, .48, .01, .98, .01, .49, .02, .49), nrow = 3, byrow = T)
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
predZ <- sim[,3]
optZ <- sim[,4]
par(mfrow=c(3,1))
plot(0:N, Z, type = "s", lwd = 2, cex.axis = 1.5, main = "Realizations", xlab = "", ylab = "Z", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
legend(0, 2, c("Z"), col = c("black"), lty = c(1), lwd = c(2))
plot(0:N, predZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "", ylab = "Predictable Variation Process", cex.lab = 1.5, cex.main = 1.5, xaxt="n")
abline(h = mean(predZ), col = "blue", lwd = 3)
legend(0, 25, c("Predictable Variation Process", paste("Mean of Predictable Variation Process =", mean(predZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(2, 3))
plot(0:N, optZ, type = "s", lwd = 2, cex.axis = 1.5, xlab = "Time n", ylab = "Optional Variation Process", cex.lab = 1.5, cex.main = 1.5)
abline(h = mean(optZ), col = "blue", lwd = 3)
legend(0, 25, c("Optional Variation Process", paste("Mean of Optional Variation Process =", mean(optZ))), col = c("black", "blue"), lty = c(1, 1), lwd = c(2, 3))
set.seed(98)
N <- 100
M <- 12
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
cols <- brewer.pal(M,"Paired")
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
abline(h = mean(predZmatr), col = "blue", lwd = 3)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
abline(h = mean(optZmatr), col = "blue", lwd = 3)
set.seed(98)
N <- 100
M <- 1
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
cols <- brewer.pal(M,"Paired")
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
# abline(h = mean(predZmatr), col = "blue", lwd = 3)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
# abline(h = mean(optZmatr), col = "blue", lwd = 3)
set.seed(98)
N <- 100
M <- 1
Zmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
Z <- sim[,2]
Zmatr[i,] <- Z
}
predZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
predZ <- sim[,3]
predZmatr[i,] <- predZ
}
optZmatr <- matrix(0, nrow = M, ncol = N + 1)
for (i in 1:M) {
sim <- simFun(N, alpha, beta)
optZ <- sim[,4]
optZmatr[i,] <- optZ
}
cols <- brewer.pal(M,"Paired")
par(mfrow=c(3,1))
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(Zmatr), max(Zmatr)), main = "Realizations", xlab = "",
ylab = "Z", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, Zmatr[i,], col = cols[i], lwd = 2, type = "s" )
}
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(predZmatr), max(predZmatr)), xlab = "",
ylab = "Predictable Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5, xaxt="n")
for (i in 1:M) {
lines(0:N, predZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
# abline(h = mean(predZmatr), col = "blue", lwd = 3)
plot(NULL, NULL, xlim = c(0, N), ylim = c(min(optZmatr), max(optZmatr)), xlab = "Time n",
ylab = "Optional Variation Process", cex.axis = 1.5, cex.lab = 1.5, lwd = 1.5)
for (i in 1:M) {
lines(0:N, optZmatr[i,], col = cols[i], lwd = 2, type = "s")
}
# abline(h = mean(optZmatr), col = "blue", lwd = 3)
Zmatr
predZmatr
optZmatr
View(Zmatr)
View(predZmatr)
View(optZmatr)
