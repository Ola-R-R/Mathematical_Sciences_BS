log(1 - runif(nrow(tire)))
exp(sum(t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]))
exp((t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]))
K <- exp((t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]))
K
t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
ai=1
i=1
K[i,]
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
K
K[i,]
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
as.numeric(coef(modweielim4))
tire[,-c(1,4,6,8,9)
tire[,-c(1,4,6,8,9)]
tire
t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
# Calc. censoring times from Eq. (2.8)
C <- -(1/lambda) * logu
sim2a <- function(tire, modweielim4, seed = 98) {
set.seed(seed)
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
# Calc. censoring times from Eq. (2.8)
C <- -(1/1) * logu
tildeTT <- c()
D <- c()
for (i in 1:nrow(tire)) {
# Finding the right censored survival times from Eq. (2.3)
tildeTT[i] <- min(TT[i], C[i])
# Finding the censoring indicators from Eq. (2.4)
ifelse(TT[i] <= C[i], D[i] <- 1, D[i] <- 0)
}
# Sorting them in correct order
tildeT <- sort(tildeTT)
D <- D[order(tildeTT)]
return(list(tildeT, D))
}
fun2a <- function(tire, modweielim4, seed = 98) {
set.seed(seed)
survivaltimes <- rweibull(nrow(tire),1/(modweielim4$scale),exp(as.numeric(modweielim4$coef[1])))  * exp(sum(t(as.numeric(coef(modweielim4))) * tire[,-c(1,4,6,8,9)]))
rweibull(nrow(tire),1/(modweielim4$scale),exp(.25))
censoredtimes <- rexp(nrow(tire),.5)
tildeTT <- c()
D <- c()
for (i in 1:nrow(tire)) {
tildeTT[i] <- min(survivaltimes[i], censoredtimes[i])
ifelse(survivaltimes[i] <= censoredtimes[i], D[i] <- 1, D[i] <- 0)
}
tiresim <- data.frame(survivaltimes, D)
print(sum(D[D==1]))
return(tiresim)
}
fun2a(tire,modweielim4)
# mean(rweibull(nrow(tire),1/(modweielim4$scale),exp(.1)))
# var(rweibull(nrow(tire),1/(modweielim4$scale),exp(.1)))
logu <- log(1 - runif(nrow(tire)))
a = 1/(modweielim4$scale)
sigma <- exp(as.numeric(modweielim4$coef[1]))
K <- t(as.numeric(coef(modweielim4)[-c(1,6)])) * tire[,-c(1,4,6,8,9)]
# Calc. survival times from Eq. (2.7)
TT <- c()
for (i in 1:nrow(tire)) {
TT[i] <- (-((sigma^a)/exp(sum(K[i,]))) * logu)^(1/a)
}
TT
# Calc. censoring times from Eq. (2.8)
C <- -(1/1) * logu
tildeTT <- c()
D <- c()
for (i in 1:nrow(tire)) {
# Finding the right censored survival times from Eq. (2.3)
tildeTT[i] <- min(TT[i], C[i])
# Finding the censoring indicators from Eq. (2.4)
ifelse(TT[i] <= C[i], D[i] <- 1, D[i] <- 0)
}
# Sorting them in correct order
tildeT <- sort(tildeTT)
D <- D[order(tildeTT)]
D
tildeT
survivalcensored
unique(survivalc)
survivalc = survivalcensored
unique(survivalc)
length(unique(survivalc))
[unique(survivalc) == survivalc[i]]
length(unique(survivalc)[unique(survivalc) == survivalc[i]])
i=1
(unique(survivalc))[i]
unique(survivalc) == (unique(survivalc))[i]]
unique(survivalc) == (unique(survivalc))[i]
(survivalc) == (unique(survivalc))[i]
length(unique(survivalc)[(survivalc) == (unique(survivalc))[i]])
length((survivalc)[(survivalc) == (unique(survivalc))[i]]) > 1
hatA <- function(tireb, betas, survivalc = survivalcensored) {
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
A <- c()
for (i in length((unique(survivalc)))) {
if (length((survivalc)[(survivalc) == (unique(survivalc))[i]]) > 1) {
A[i] <- sum(Amod[(survivalc) == (unique(survivalc))[i]])/length((survivalc)[(survivalc) == (unique(survivalc))[i]])
} else {
A[i] <- Amod[(survivalc) == (unique(survivalc))[i]]
}
}
return(cumsum(Amod * exp(sum(t(betas)))))
}
deltahatA <- hatA(tirebeta,betasmod)
deltahatAsign <- hatA(tirebetasign,betasmodsign)
plot(stepfun(survivalcensored,c(0,deltahatA)),xlim=c(0,1.3))
lines(stepfun(survivalcensored,c(0,deltahatAsign)))
survival <- tire$Survival*tire$Censor
survivalcensored <- sort(c(survival[survival > 0]))
tirebeta <- tire[survival > 0,1:7]
tirebetasign <- tire[survival > 0,c(2,3,5,7)]
betasmod <- c(as.numeric(mod$coefficients))
betasmodsign <- c(as.numeric(modsign$coefficients))
hatA <- function(tireb, betas, survivalc = survivalcensored) {
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
A <- c()
for (i in length((unique(survivalc)))) {
if (length((survivalc)[(survivalc) == (unique(survivalc))[i]]) > 1) {
A[i] <- sum(Amod[(survivalc) == (unique(survivalc))[i]])/length((survivalc)[(survivalc) == (unique(survivalc))[i]])
} else {
A[i] <- Amod[(survivalc) == (unique(survivalc))[i]]
}
}
return(cumsum(Amod * exp(sum(t(betas)))))
}
deltahatA <- hatA(tirebeta,betasmod)
deltahatAsign <- hatA(tirebetasign,betasmodsign)
plot(stepfun(survivalcensored,c(0,deltahatA)),xlim=c(0,1.3))
lines(stepfun(survivalcensored,c(0,deltahatAsign)))
plot(stepfun(survivalcensored,c(1,cumprod(1-deltahatA))),xlim=c(0,1.3))
lines(stepfun(survivalcensored,c(1,cumprod(1-deltahatAsign))))
survival <- tire$Survival*tire$Censor
survivalcensored <- sort(c(survival[survival > 0]))
tirebeta <- tire[survival > 0,1:7]
tirebetasign <- tire[survival > 0,c(2,3,5,7)]
betasmod <- c(as.numeric(mod$coefficients))
betasmodsign <- c(as.numeric(modsign$coefficients))
hatA <- function(tireb, betas, survivalc = survivalcensored) {
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
A <- c()
for (i in length((unique(survivalc)))) {
if (length((survivalc)[(survivalc) == (unique(survivalc))[i]]) > 1) {
A[i] <- sum(Amod[(survivalc) == (unique(survivalc))[i]])/length((survivalc)[(survivalc) == (unique(survivalc))[i]])
} else {
A[i] <- Amod[(survivalc) == (unique(survivalc))[i]]
}
}
return(cumsum(A * exp(sum(t(betas)))))
}
deltahatA <- hatA(tirebeta,betasmod)
deltahatAsign <- hatA(tirebetasign,betasmodsign)
plot(stepfun(survivalcensored,c(0,deltahatA)),xlim=c(0,1.3))
deltahatA
deltahatAsign
survival <- tire$Survival*tire$Censor
survivalcensored <- sort(c(survival[survival > 0]))
tirebeta <- tire[survival > 0,1:7]
tirebetasign <- tire[survival > 0,c(2,3,5,7)]
betasmod <- c(as.numeric(mod$coefficients))
betasmodsign <- c(as.numeric(modsign$coefficients))
hatA <- function(tireb, betas, survivalc = survivalcensored) {
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
print(Amod)
A <- c()
for (i in length((unique(survivalc)))) {
if (length((survivalc)[(survivalc) == (unique(survivalc))[i]]) > 1) {
A[i] <- sum(Amod[(survivalc) == (unique(survivalc))[i]])/length((survivalc)[(survivalc) == (unique(survivalc))[i]])
} else {
A[i] <- Amod[(survivalc) == (unique(survivalc))[i]]
}
}
return(cumsum(A * exp(sum(t(betas)))))
}
deltahatA <- hatA(tirebeta,betasmod)
deltahatAsign <- hatA(tirebetasign,betasmodsign)
plot(stepfun(survivalcensored,c(0,deltahatA)),xlim=c(0,1.3))
i=1
unique(survivalc)
survivalc
unique(survivalc)
i=3
(survivalc) == (unique(survivalc))[i]
Amod[(survivalc) == (unique(survivalc))[i]]
t = seq(0,1.3,.01)
plot(t,exp(exp(sum(modwei$coef[2:8])) * pweibull(t,shape = 1/(modwei$scale), scale = exp(as.numeric(modwei$coef[1])),lower=F,log=T)),type="l")
lines(t,exp(exp(sum(modsignwei$coef[2:5])) * pweibull(t,shape = 1/(modsignwei$scale), scale = exp(as.numeric(modsignwei$coef[1])),lower=F,log=T)))
k <- 1/(modwei$scale)
ks <- 1/(modsignwei$scale)
b <- exp(as.numeric(modwei$coef[1]))^(-k)
bs <- exp(as.numeric(modsignwei$coef[1]))^(-ks)
plot(t,exp(-b*(t^k)/k),type="l")
lines(t,exp(-bs*(t^ks)/ks))
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
tireb = tire
betas = betasmod
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
Amod[(survivalc) == (unique(survivalc))[i]]
(survivalc) == (unique(survivalc))[i]
(unique(survivalc))[i]
survivalc
unique(survivalc)
unique(survivalc)[i]
unique(survivalc)
unique(survivalc)[,i]
c(unique(survivalc))[i]
i=3
unique(survivalc)[i]
(survivalc) == unique(survivalc)[i]
Amod[(survivalc) == unique(survivalc)[i]]
i=1
Amod[(survivalc) == unique(survivalc)[i]]
survival <- tire$Survival*tire$Censor
survivalcensored <- sort(c(survival[survival > 0]))
tirebeta <- tire[survival > 0,1:7]
tirebetasign <- tire[survival > 0,c(2,3,5,7)]
betasmod <- c(as.numeric(mod$coefficients))
betasmodsign <- c(as.numeric(modsign$coefficients))
hatA <- function(tireb, betas, survivalc = survivalcensored) {
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
print(Amod)
A <- c()
for (i in length((unique(survivalc)))) {
if (length((survivalc)[(survivalc) == (unique(survivalc))[i]]) > 1) {
A[i] <- sum(Amod[(survivalc) == (unique(survivalc))[i]])/length((survivalc)[(survivalc) == (unique(survivalc))[i]])
} else {
A[i] <- Amod[(survivalc) == unique(survivalc)[i]]
}
}
return(cumsum(A * exp(sum(t(betas)))))
}
deltahatA <- hatA(tirebeta,betasmod)
deltahatAsign <- hatA(tirebetasign,betasmodsign)
plot(stepfun(survivalcensored,c(0,deltahatA)),xlim=c(0,1.3))
survival <- tire$Survival*tire$Censor
survivalcensored <- sort(c(survival[survival > 0]))
tirebeta <- tire[survival > 0,1:7]
tirebetasign <- tire[survival > 0,c(2,3,5,7)]
betasmod <- c(as.numeric(mod$coefficients))
betasmodsign <- c(as.numeric(modsign$coefficients))
hatA <- function(tireb, betas, survivalc = survivalcensored) {
Amod <- c()
for (i in 1:length(survivalc)) {
Amoddenom <- c()
for (j in 1:ncol(tireb)) {
Amoddenom[j] <- exp(c(t(betas) * tireb[i,j]))
}
Amod[i] <- 1/sum(Amoddenom)
}
print(Amod)
A <- c()
for (i in 1:length((unique(survivalc)))) {
if (length((survivalc)[(survivalc) == (unique(survivalc))[i]]) > 1) {
A[i] <- sum(Amod[(survivalc) == (unique(survivalc))[i]])/length((survivalc)[(survivalc) == (unique(survivalc))[i]])
} else {
A[i] <- Amod[(survivalc) == unique(survivalc)[i]]
}
}
return(cumsum(A * exp(sum(t(betas)))))
}
deltahatA <- hatA(tirebeta,betasmod)
deltahatAsign <- hatA(tirebetasign,betasmodsign)
plot(stepfun(survivalcensored,c(0,deltahatA)),xlim=c(0,1.3))
survivalcensored
deltahatA
c(survival[survival > 0])
survival
tire[c(survival[survival > 0])]
tire[,c(survival[survival > 0])]
tire[7,c(survival[survival > 0])]
tire
tire[,order(tire$Survival)]
order(tire$Survival)
tire[,c(order(tire$Survival))]
tire
tire
tire[order(c(survival[survival > 0])),]
tire[tire$Censor == 1,]
tire$Censor == 1,
tire$Censor == 1
tire[tire$Censor == 1,]
order(tirec$Survival)
tirec <- tire[tire$Censor == 1,]
order(tirec$Survival)
tirec[order(tirec$Survival)]
tirec[order(tirec$Survival),]
tiret <- tirec[order(tirec$Survival),]
tirec[order(tirec$Survival),]
tirec[order(tirec$Survival),]
tire[tire$Censor == 1,]
tiret
betasmod <- c(as.numeric(mod$coefficients))
(unique(survivalc))
unique(survivalc)
tiret
tiret
tiret
tiret
tiret$Survival
unique(tiret$Survival)
length(unique(tiret$Survival))
exp(exp(sum(modwei$coef[2:8])) * pweibull(t,shape = 1/(modwei$scale), scale = exp(as.numeric(modwei$coef[1]))
plot(t,exp(exp(sum(modsignwei$coef[2:8])) * pweibull(t,shape = 1/(modsignwei$scale), scale = exp(as.numeric(modwei$coef[1])),lower=F,log=T)),type="l")
modwei <- survreg(Surv(Survival, Censor) ~ Age + Wedge + Inter + EB2B + Peel + Carbon + WxP, tire)
summary(modwei)
modsignwei <- survreg(Surv(Survival, Censor) ~ Wedge + Inter + Peel + WxP, tire)
summary(modsignwei)
weib.coef.ph <- -modwei$coef[2:8]/modwei$scale
coxph.coef <- mod$coef
weib.coef.ph.sign <- -modsignwei$coef[2:5]/modsignwei$scale
coxph.coef.sign <- modsign$coef
data.frame(weib.coef.ph, coxph.coef)
data.frame(weib.coef.ph.sign, coxph.coef.sign)
weib.coef.ph
sum(weib.coef.ph)
plot(t,exp(exp(sum(weib.coef.ph)) * pweibull(t,shape = 1/(modwei$scale), scale = exp(as.numeric(modwei$coef[1])),lower=F,log=T)),type="l")
t = seq(0,1.3,.01)
plot(t,exp(exp(sum(weib.coef.ph)) * pweibull(t,shape = 1/(modwei$scale), scale = exp(as.numeric(modwei$coef[1])),lower=F,log=T)),type="l")
lines(t,exp(exp(sum(weib.coef.ph.sign)) * pweibull(t,shape = 1/(modsignwei$scale), scale = exp(as.numeric(modsignwei$coef[1])),lower=F,log=T)))
t = seq(0,1.3,.01)
plot(t,exp(exp(sum(weib.coef.ph)) * pweibull(t,shape = 1/(modwei$scale), scale = exp(as.numeric(modwei$coef[1])),lower=F,log=T)),type="l", col = "blue")
lines(t,exp(exp(sum(weib.coef.ph.sign)) * pweibull(t,shape = 1/(modsignwei$scale), scale = exp(as.numeric(modsignwei$coef[1])),lower=F,log=T)), col = "red")
t = seq(0,1.3,.01)
plot(t,exp(exp(sum(weib.coef.ph)) * pweibull(t,shape = 1/(modwei$scale), scale = exp(as.numeric(modwei$coef[1])),lower=F,log=T)),type="l", col = "blue")
lines(t,exp(exp(sum(weib.coef.ph.sign)) * pweibull(t,shape = 1/(modsignwei$scale), scale = exp(as.numeric(modsignwei$coef[1])),lower=F,log=T)), col = "red")
k <- 1/(modwei$scale)
ks <- 1/(modsignwei$scale)
b <- exp(as.numeric(modwei$coef[1]))^(-k)
bs <- exp(as.numeric(modsignwei$coef[1]))^(-ks)
plot(t,exp(-b*(t^k)/k),type="l")
lines(t,exp(-bs*(t^ks)/ks))
